package com.example.demo;

import org.springframework.boot.CommandLineRunner;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;

import com.example.demo.entities.User;

import com.example.demo.repository.UserRepository;

@SpringBootApplication
public class Application {

	public static void main(String[] args) {
		SpringApplication.run(Application.class, args);
	}
	@Bean
	public CommandLineRunner demo(UserRepository repository) {
		return(args)->{
			System.out.println("New user account creation:");
			repository.save(new User("pass1","Sowmini","Chennai",0));
			repository.save(new User("pass2","Sona","Chennai",0));
			repository.save(new User("pass3","Sangeetha","Chennai",0));
			repository.save(new User("pass4","Sneha","Chennai",0));
			repository.save(new User("pass5","Arthi","Chennai",0));
			System.out.println("List of all users registered:");
			repository.findAll().forEach(System.out::println);
			System.out.println("Deposit amount:");
			User user1 = repository.findById(2).get();
			int total1 = user1.getBalance()+2000;
			user1.setBalance(total1);
			repository.save(user1);
			System.out.println("List of all users registered:");
			repository.findAll().forEach(System.out::println);
			System.out.println("Withdraw amount:");
			User user2 = repository.findById(2).get();
			if(user2.getBalance()>=200) {
				int total2 = user2.getBalance()-200;
				user2.setBalance(total2);
				repository.save(user2);
			}
			else {
				System.out.println("Insufficient balance");
			}
			System.out.println("Delete user:");
			User user3 = repository.findById(5).get();
			repository.delete(user3);
			System.out.println("List of all users registered");
			repository.findAll().forEach(System.out::println);
		};
	}
}

